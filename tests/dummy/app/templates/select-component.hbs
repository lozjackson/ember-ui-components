<div class="go-back-link">
  {{#link-to 'index'}}Back to index{{/link-to}}
</div>

<h1>SelectComponent</h1>

<div class="panel">

  <h2><code>&#123;&#123;uic-select&#125;&#125;</code></h2>

  <h2>Description</h2>

  <p>The SelectComponent will create a select element.</p>

  <h3>Basic use:</h3>

  {{code-panel name="select-basic.hbs"}}

  <h3>Advanced use:</h3>

  {{code-panel name="select-advanced.hbs"}}

</div>
<div class="panel">
  <h2>Parameters</h2>
  <ul>
    <li>
      <h4>{String | Number} selected</h4>
      <p>Optional.</p>
      <p>
        This is the value of the selected item.
      </p>
    </li>

    <li>
      <h4>{Boolean} disabled</h4>
      <p>Optional.</p>
      <p>
        Disables the `select` element.
      </p>
    </li>

    <li>
      <h4>{Array} options</h4>
      <p>Required.</p>
      <p>
        This should be an array and is used to populate the options of the select
        element.  Each element of the array can be either a primitive value, like
        a string or number, or it can be an object.  If you pass an object it
        should have two properties - `value` and `text` - and they should both
        be either a string or a number.
      </p>
      <p>When using primitive values like strings or numbers, the value of the
        array element will be used for both the value and the text of the option
        elements.</p>
      <div class="panel code">
        <pre><code>[
  'Active',
  'Complete'
]</code></pre>
        </div>
      <p>...or using objects:</p>
      <div class="panel code">
        <pre><code>[
  {
    value: 1, // the value of the item
    text: 'Active' // the text to display
  },
  {
    value: 2, // the value of the item
    text: 'Complete' // the text to display
  }
]</code></pre>
        </div>
    </li>
    <li>
      <h4>{String} placeholder</h4>
      <p>Optional.</p>
      <p>
        If provided this will be used as the first option but will be disabled.
      </p>
    </li>
    <li>
      <h4>{String} class</h4>
      <p>Optional.</p>
      <p>
        This is the `class` attribute of the select element.  There are some
        built-in CSS classes that can be applied, or you can set your own CSS
        class names here and define the class' properties in your stylesheet.
      </p>
    </li>
  </ul>

</div>

<div class="panel">
  <h2>Examples:</h2>

  <h3>Array of strings</h3>

  <p>controller:</p>

  {{code-panel name="array-of-strings.js"}}

  <p>template:</p>

  {{code-panel name="string-select-example.hbs"}}

  <div class="panel output">
{{! BEGIN-SNIPPET string-select-example }}
{{uic-select
  selected=selectedString
  options=arrayOfStrings
  placeholder="Please select..."}}

<label>selected: {{selectedString}}</label>
{{! END-SNIPPET }}
  </div>

  <hr />
  <h3>Array of objects</h3>

  <p>controller:</p>

  {{code-panel name="array-of-objects.js"}}

  <p>template:</p>

  {{code-panel name="object-select-example.hbs"}}

  <div class="panel output">
{{! BEGIN-SNIPPET object-select-example }}
{{uic-select
  selected=selectedObject
  options=arrayOfObjects
  placeholder="Please select..."}}

<label>selected: {{selectedObject}}</label>
{{! END-SNIPPET }}
  </div>
</div>
