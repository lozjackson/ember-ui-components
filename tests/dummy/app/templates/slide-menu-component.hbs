<div class="go-back-link">
  {{#link-to 'index'}}Back to index{{/link-to}}
</div>

<h1>SlideMenuComponent</h1>

<div class="panel">

  <h2><code>&#123;&#123;uic-slide-menu&#125;&#125;</code></h2>

  <h2>Description</h2>

  <p>
    The SlideMenuComponent will create a menu that starts off the screen and
    slides into view when opened.
  </p>

  <h3>Basic use:</h3>

  <p>
    Place the <code>SlideMenuComponent</code> in the <code>application</code> template.
    Place the page content inside the slide menu.
  </p>
  {{code-panel name="slide-menu-basic.hbs"}}

  <h3>Advanced use:</h3>

  {{code-panel name="slide-menu-advanced.hbs"}}

  <p>
    Check out the main menu for an example of this component - This demo application
    uses it for navigation.  You can change some of the parameters below to see
    how they affect the menu.
  </p>

  <ul>
    <li>
      {{uic-check-box class="toggle" checkboxId="menuOpen" checked=application.menuOpen}}
      <label for="menuOpen">menuOpen</label>
    </li>
    <li>
      {{uic-select selected=application.menuPosition options=menuPositions}}
      menuPosition
    </li>
    <li>
      {{uic-check-box class="toggle" checkboxId="pushContent" checked=application.pushContent}}
      <label for="pushContent">pushContent</label>
    </li>
    <li>
      {{uic-select selected=application.pushContentType options=pushContentTypeOptions disabled=(unless application.pushContent true)}}
      pushContentType
    </li>
    <li>
      {{uic-check-box class="toggle" checkboxId="maskContent" checked=application.maskContent}}
      <label for="maskContent">maskContent</label>
    </li>
    <li>
      {{uic-check-box class="toggle" checkboxId="disableScroll" checked=application.disableScroll}}
      <label for="disableScroll">disableScroll</label>
    </li>
    <li>
      {{uic-check-box class="toggle" checkboxId="showDefaultToggle" checked=application.showDefaultToggle}}
      <label for="showDefaultToggle">showDefaultToggle</label>
    </li>
  </ul>
</div>
<div class="panel">
  <h2>Parameters</h2>
  <ul>
    <li>
      <h4>{Boolean} menuOpen</h4>
      <p>Optional. Default: <code>false</code></p>
      <p>
        Set this property to true or false to open or close the menu.
      </p>
    </li>

    <li>
      <h4>{String} menuTemplate</h4>
      <p>Optional.</p>
      <p>
        Set the template name to use for the menu here.
      </p>
      <p>
        For example, if you set the `menuTemplate` to `menus/application`, then it
        will expect to find a template at `templates/menus/application.hbs`.
      </p>
      <p>
        If you leave this property set to `null`, and set `staticTemplate` to false,
        the default behaviour, then the template name will be set automatically.
        It will first look for a menu template with the same name as the route, if
        it doesn't find one, it looks up the route hierarchy until it gets to the
        application level.  If no menu templates can be found it will throw an error.
      </p>
    </li>

    <li>
      <h4>{String} menuTemplatePath</h4>
      <p>Optional.  Default: <code>menus</code></p>
      <p>
        This is the menu template path.  This is only used when `menuTemplate` is null.
      </p>
    </li>

    <li>
      <h4>{Boolean} staticTemplate</h4>
      <p>Optional.  Default: <code>false</code></p>
      <p>
        If `staticTemplate` is true then the `menuTemplate` property will be required.
        If `staticTemplate` is false, then the menu template will be dynamically
        looked up if `menuTemplate` is not specified.
      </p>
    </li>

    <li>
      <h4>{String} menuPosition</h4>
      <p>Optional.  Default: <code>left</code></p>
      <p>
        This is the position of the menu on the window.
      </p>
    </li>

    <li>
      <h4>{Boolean} pushContent</h4>
      <p>Optional. Default: <code>false</code></p>
      <p>
        If true the page content will slide with the menu.  If false the menu will
        slide over the top of the page content.
      </p>
    </li>

    <li>
      <h4>{String} pushContentType</h4>
      <p>Optional. Default: <code>push-content</code></p>
      <p>
        This property allows you to change the way the content is pushed when the
        menu is opened.  The string value is used for the class name that is added
        to the content container.  There are some built-in classes, but you could
        easily add your own css classes.
      </p>
      <p>
        Built in classes include:
      </p>
        <ul>
          <li><code>push-content</code></li>
          <li><code>squeeze-content</code></li>
        </ul>

    </li>

    <li>
      <h4>{Boolean} maskContent</h4>
      <p>Optional. Default: <code>true</code></p>
      <p>
        If true the page content will be masked while the menu is open.
      </p>
    </li>

    <li>
      <h4>{Boolean} disableScroll</h4>
      <p>Optional. Default: <code>true</code></p>
      <p>
        If true the <code>uic-disable-scroll</code> css class will be applied to
        the <code>body</code> element while the menu is open.
      </p>
    </li>

    <li>
      <h4>{Boolean} showDefaultToggle</h4>
      <p>Optional.  Default: <code>true</code></p>
      <p>
        If true then the default menu toggle button will be displayed.  If you want
        to create your own menu toggle button, then set this parameter to false and
        the default toggle button will not be displayed.
      </p>
    </li>

    <li>
      <h4>{String} menuToggleClass</h4>
      <p>Optional.  Default: <code>uic-menu-toggle-fixed</code></p>
      <p>
        The menu toggle button class attribute.  By default this is set to
        <code>uic-menu-toggle-fixed</code>.
      </p>
    </li>
  </ul>
</div>
<div class="panel">
  <h2>Actions</h2>
  <ul>
    <li>
      <h4>{Boolean} closeMenu</h4>
      <p>
        This action will close the menu.  This can be called from within the menu
        template.
      </p>
    </li>
  </ul>
</div>
<div class="panel">
  <h2>Block Parameters</h2>
  <p>The following parameters are available from within the block</p>
  <ul>
    <li>
      <h4>{Boolean} menuOpen</h4>
      <p>Optional. Default: False</p>
      <p>
        Set this property to true or false to open or close the menu.
      </p>
    </li>
  </ul>

</div>
<div class="panel">
  <h2>Menu Template</h2>
  <p>
    Create a template for the menu.  This should be located at `templates/menus/application.hbs`.
    If you want to store your template somewhere else then specify the path as the `menuTemplate` property.
  </p>

  <p>
    This is the template for the menu used by this application.
  </p>

  {{code-panel name="application-menu.hbs"}}

</div>
